package com.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;

import redis.clients.jedis.Jedis;
import redis.clients.jedis.JedisPool;


public class Test {
	static Connection connection = null;
	static Statement statement = null;
	
	static Connection connection1 = null;
	static Statement statement1 = null;
	
	static JedisPool pool = null; 
	static Jedis jedis = null;
	
	public static void creatWebDBConnection(){
		System.out.println("-------- PostgreSQL "
				+ "JDBC Connection Testing ------------");
		try {
		        Class.forName("org.postgresql.Driver");
		} catch (ClassNotFoundException e) {
		        System.out.println("Where is your PostgreSQL JDBC Driver? "
		                        + "Include in your library path!");
		        e.printStackTrace();
		        return;
		}
		System.out.println("PostgreSQL JDBC Driver Registered!");

        try {
                connection = DriverManager.getConnection(
                                "jdbc:postgresql://192.168.199.235:5432/circuitive-development", "postgres",
                                "postgres");
                statement = connection.createStatement();
        } catch (SQLException e) {
                System.out.println("Connection Failed! Check output console");
                e.printStackTrace();
                return;
        }
        if (connection != null) {
	            System.out.println("You made it, take control your database now!");
	    } else {
	            System.out.println("Failed to make connection!");
	    }
	}
	
	public static void creatERPDBConnection(){
		System.out.println("-------- PostgreSQL "
				+ "JDBC Connection Testing ------------");
		try {
		        Class.forName("org.postgresql.Driver");
		} catch (ClassNotFoundException e) {
		        System.out.println("Where is your PostgreSQL JDBC Driver? "
		                        + "Include in your library path!");
		        e.printStackTrace();
		        return;
		}
		System.out.println("PostgreSQL JDBC Driver Registered!");

        try {
                connection1 = DriverManager.getConnection(
                                "jdbc:postgresql://127.0.0.1:5432/idempiere", "adempiere",
                                "adempiere");
                statement1 = connection.createStatement();
        } catch (SQLException e) {
                System.out.println("Connection Failed! Check output console");
                e.printStackTrace();
                return;
        }
        if (connection != null) {
	            System.out.println("You made it, take control your database now!");
	    } else {
	            System.out.println("Failed to make connection!");
	    }
	}
	
	
	public static void createRedisConnection(){
		pool = new JedisPool("127.0.0.1", 6379); 
		try {
			jedis = pool.getResource();
		} catch (Exception e) {
			System.out.println("redis连接错误");
			e.printStackTrace();
		}
	}
	
	public static void main(String[] args) throws SQLException{
		String orderId = "24";
		creatWebDBConnection();
		printResult(query(getOrderSql(orderId)));
		
		//creatERPDBConnection();
	}  
	
	public static String getOrderBomSql(String orderId){
		String sql = "select * from project_bom_info where \"projectVersionId\" = (select \"projectId\" from order_project_details where \"id\" =";
		sql = sql + orderId;
		sql += ")";
		return sql;
	}
	
	public static String getOrderSql(String orderId){
		String sql = "select o.\"orderId\", o.\"date\", o.\"statusId\", a.* ";
		sql += "from order_details o, (select * from user_address where id = (select \"addressId\" from order_shippment where \"orderId\"=";
		sql += orderId;
		sql += ")) a ";
		sql += "where o.\"orderId\"=";
		sql += orderId;
		return sql;
	}
	
	public static ResultSet query(String sql) throws SQLException{
		ResultSet result = statement.executeQuery(sql);
		return result;
	}
	
	public static void printResult(ResultSet result) throws SQLException{
		ResultSetMetaData m = result.getMetaData();
		
		for(int i=1; i<=m.getColumnCount(); i++)
		{
			System.out.print(m.getColumnName(i));
			System.out.print("\t\t");
		}
		
		System.out.println();
		
		while(result.next()){
		    for(int i=1; i<=m.getColumnCount(); i++)
		    {
		    	System.out.print(result.getString(i));
		    	System.out.print("\t\t");
		    }
		    	System.out.println();
	   }
	}
	
	public void insertOrder(ResultSet orderSet) throws SQLException{
		String sql = "insert into \"adempiere\".\"swie_order\" ";
		sql += "(\"swie_order_id\", \"date\", \"statusId\", \"ad_client_id\", \"ad_org_id\", \"createdby\", \"updatedby\", \"userId\", ";
		sql += "\"fullName\", \"region\", \"country\", \"city\", \"address1\", \"address2\", \"phone\", \"dialcode\", \"postalCode\")";
		sql += "values(";
		sql += orderSet.getString("orderId");
		sql += ", ";
		sql += "'";
		sql += orderSet.getString("date");
		sql += "'";
		sql += ", ";
		sql += orderSet.getString("statusId");
		sql += ", ";
		sql += "0, 0, 0, 0";
		sql += orderSet.getString("userId");
		sql += " ,";
		sql += "'";
		sql += orderSet.getString("fullName");
		sql += "'";
		sql += " ,";
		sql += "'";
		sql += orderSet.getString("region");
		sql += "'";
		sql += " ,";
		sql += "'";
		sql += orderSet.getString("country");
		sql += "'";
		sql += " ,";
		sql += "'";
		sql += orderSet.getString("city");
		sql += "'";
		sql += " ,";
		sql += "'";
		sql += orderSet.getString("address1");
		sql += "'";
		sql += " ,";
		sql += "'";
		sql += orderSet.getString("address2");
		sql += "'";
		sql += " ,";
		sql += orderSet.getString("phone");
		sql += " ,";
		sql += orderSet.getString("dialcode");
		sql += " ,";
		sql += orderSet.getString("postalCode");
		sql += ")";
		
		System.out.println(sql);
		
		
	}
	
	
}
